import asyncio
import json
from playwright.async_api import async_playwright
import os
import time

COOKIE_FILE_PATH = "facebook_cookies.json"

async def refresh_facebook_session_manual():
    """
    ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ Login ‡∏î‡πâ‡∏ß‡∏¢‡∏°‡∏∑‡∏≠ ‡πÅ‡∏•‡πâ‡∏ß‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Cookies ‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    """
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä Facebook Session (‡∏ï‡πâ‡∏≠‡∏á Login ‡∏î‡πâ‡∏ß‡∏¢‡∏°‡∏∑‡∏≠)...")
    
    # ‚ùó‚ùó ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏ö‡∏ô Raspberry Pi ‡∏°‡∏∂‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ GUI (Desktop Environment) 
    # ‡πÅ‡∏•‡∏∞ X-Server ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÑ‡∏î‡πâ ‚ùó‚ùó
    
    async with async_playwright() as p:
        try:
            browser = await p.chromium.launch(
                headless=False, # üí•üí• ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏∂‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏•‡∏∞ Login ‡πÄ‡∏≠‡∏á üí•üí•
                channel="chromium",
                args=["--no-sandbox", "--disable-setuid-sandbox"]
            )
            
            # 1. ‡πÇ‡∏´‡∏•‡∏î Session ‡πÄ‡∏Å‡πà‡∏≤‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
            if os.path.exists(COOKIE_FILE_PATH):
                with open(COOKIE_FILE_PATH, 'r') as f:
                    cookies = json.load(f)
                context = await browser.new_context()
                await context.add_cookies(cookies)
            else:
                context = await browser.new_context()

            page = await context.new_page()
            await page.goto("https://www.facebook.com/")
            
            print("\n========================================================")
            print("üö®üö® ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ Login ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏î‡πâ‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤ üö®üö®")
            print("    ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÉ‡∏´‡πâ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° 'Enter' ‡πÉ‡∏ô Terminal ‡∏ô‡∏µ‡πâ")
            print("========================================================\n")
            
            # 2. ‡∏£‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ Login ‡∏î‡πâ‡∏ß‡∏¢‡∏°‡∏∑‡∏≠ ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î Enter
            # ‡∏°‡∏∂‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏î Enter ‡πÉ‡∏ô Terminal ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏£‡∏±‡∏ô‡∏ï‡πà‡∏≠
            await asyncio.to_thread(input, ">> ‡∏Å‡∏î ENTER ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å Login ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤ Home ‡πÅ‡∏•‡πâ‡∏ß: ")

            # 3. ‡∏î‡∏∂‡∏á‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Cookies ‡πÉ‡∏´‡∏°‡πà
            cookies = await context.cookies()
            with open(COOKIE_FILE_PATH, 'w') as f:
                json.dump(cookies, f, indent=4)
            
            print(f"üéâ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Cookies ‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡πÉ‡∏ô {COOKIE_FILE_PATH} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ Scraper ‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≠")
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä Session: {e}")
        finally:
            if 'browser' in locals() and browser:
                await browser.close()


def load_cookies_for_aiohttp():
    """‡πÇ‡∏´‡∏•‡∏î cookies ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà Playwright ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö aiohttp"""
    if not os.path.exists(COOKIE_FILE_PATH):
        print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå Cookie, ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ô refresh_facebook_session_manual() ‡∏Å‡πà‡∏≠‡∏ô")
        return {}
        
    # (‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏° ‡πÉ‡∏ä‡πâ‡∏î‡∏∂‡∏á Cookie ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå JSON)
    with open(COOKIE_FILE_PATH, 'r') as f:
        cookies_list = json.load(f)
        aiohttp_cookies = {}
        for cookie in cookies_list:
            aiohttp_cookies[cookie['name']] = cookie['value']
        return aiohttp_cookies

# ******************************************************************
# ‡πÇ‡∏Ñ‡πâ‡∏î Scraper (aiohttp + BeautifulSoup) ‡∏Ç‡∏≠‡∏á‡∏°‡∏∂‡∏á ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ 
# load_cookies_for_aiohttp() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á Cookie ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
# ******************************************************************

# --- ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô ---

async def run_update():
    await refresh_facebook_session_manual()

if __name__ == "__main__":
    # 1. ‡∏£‡∏±‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Cookie ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏∏‡∏Å‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå
    asyncio.run(run_update())
    
    # 2. ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Cookie ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤ (‡∏°‡∏∂‡∏á‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÉ‡∏™‡πà‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î Scraper ‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏°‡∏∂‡∏á)
    updated_cookies = load_cookies_for_aiohttp()
    print("\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Cookies ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏î‡∏∂‡∏á‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö aiohttp:")
    print(list(updated_cookies.keys()))